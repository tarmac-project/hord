name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          command: manifest
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
      
      # The following steps run if a release was created for any module
      - name: Checkout code
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/checkout@v3
      
      - name: Setup Go
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # Run tests for each module if it was released
      - name: Test Core Module
        if: ${{ steps.release.outputs['release_created'] }}
        run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      
      - name: Test Cache Module
        if: ${{ steps.release.outputs['cache--release_created'] }}
        run: cd cache && go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      
      - name: Test BBolt Driver
        if: ${{ steps.release.outputs['drivers/bbolt--release_created'] }}
        run: cd drivers/bbolt && go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      
      - name: Test Cassandra Driver
        if: ${{ steps.release.outputs['drivers/cassandra--release_created'] }}
        run: cd drivers/cassandra && go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      
      - name: Test HashMap Driver
        if: ${{ steps.release.outputs['drivers/hashmap--release_created'] }}
        run: cd drivers/hashmap && go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      
      - name: Test Mock Driver
        if: ${{ steps.release.outputs['drivers/mock--release_created'] }}
        run: cd drivers/mock && go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      
      - name: Test NATS Driver
        if: ${{ steps.release.outputs['drivers/nats--release_created'] }}
        run: cd drivers/nats && go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
      
      - name: Test Redis Driver
        if: ${{ steps.release.outputs['drivers/redis--release_created'] }}
        run: cd drivers/redis && go test -v -race -covermode=atomic -coverprofile=coverage.out ./...